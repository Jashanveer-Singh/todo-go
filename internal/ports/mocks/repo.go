// Code generated by MockGen. DO NOT EDIT.
// Source: internal/ports/repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	errr "github.com/Jashanveer-Singh/todo-go/internal/errr"
	models "github.com/Jashanveer-Singh/todo-go/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockTaskRepo is a mock of TaskRepo interface.
type MockTaskRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTaskRepoMockRecorder
}

// MockTaskRepoMockRecorder is the mock recorder for MockTaskRepo.
type MockTaskRepoMockRecorder struct {
	mock *MockTaskRepo
}

// NewMockTaskRepo creates a new mock instance.
func NewMockTaskRepo(ctrl *gomock.Controller) *MockTaskRepo {
	mock := &MockTaskRepo{ctrl: ctrl}
	mock.recorder = &MockTaskRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskRepo) EXPECT() *MockTaskRepoMockRecorder {
	return m.recorder
}

// DeleteTask mocks base method.
func (m *MockTaskRepo) DeleteTask(id int64) *errr.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTask", id)
	ret0, _ := ret[0].(*errr.AppError)
	return ret0
}

// DeleteTask indicates an expected call of DeleteTask.
func (mr *MockTaskRepoMockRecorder) DeleteTask(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTask", reflect.TypeOf((*MockTaskRepo)(nil).DeleteTask), id)
}

// GetTasks mocks base method.
func (m *MockTaskRepo) GetTasks() ([]models.Task, *errr.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTasks")
	ret0, _ := ret[0].([]models.Task)
	ret1, _ := ret[1].(*errr.AppError)
	return ret0, ret1
}

// GetTasks indicates an expected call of GetTasks.
func (mr *MockTaskRepoMockRecorder) GetTasks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTasks", reflect.TypeOf((*MockTaskRepo)(nil).GetTasks))
}

// SaveTask mocks base method.
func (m *MockTaskRepo) SaveTask(task models.Task) *errr.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTask", task)
	ret0, _ := ret[0].(*errr.AppError)
	return ret0
}

// SaveTask indicates an expected call of SaveTask.
func (mr *MockTaskRepoMockRecorder) SaveTask(task interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTask", reflect.TypeOf((*MockTaskRepo)(nil).SaveTask), task)
}

// UpdateTask mocks base method.
func (m *MockTaskRepo) UpdateTask(id int64, task models.Task) *errr.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTask", id, task)
	ret0, _ := ret[0].(*errr.AppError)
	return ret0
}

// UpdateTask indicates an expected call of UpdateTask.
func (mr *MockTaskRepoMockRecorder) UpdateTask(id, task interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTask", reflect.TypeOf((*MockTaskRepo)(nil).UpdateTask), id, task)
}
